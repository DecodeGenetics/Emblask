params {
	
    proband_lr_bam_in = ''
    proband_lr_fq_in = ''

    proband_sr_bam_in = ''
    proband_sr_fq_in = ''

    father_sr_bam_in = ''
    father_sr_fq_in = ''

    mother_sr_bam_in = ''
    mother_sr_fq_in = ''

    out_dir = ''

    genome_size = -1

    max_lr_bq = 40

    pmdv_r07_model_r9_guppy5_sup_snp = ''
    pmdv_r07_model_r9_guppy5_sup_hp = ''
    pmdv_r07_model_r9_guppy5_sup_dv = ''
}

profiles {

	standard {

		process {

			executor = 'local'

			withLabel: medium_node {
				cpus = 24
				memory = { 4.GB * task.cpus * task.attempt }
			}

			withLabel: large_node {
				cpus = 24
				memory = { 4.GB * task.cpus * task.attempt }
			}
		}
	}

	cluster {

		process {

			executor = 'slurm'

            withLabel: small_node {
                cpus = 32
                memory = { 2.GB * task.cpus * task.attempt }
            }

			withLabel: medium_node {
				cpus = 32
				memory = { 4.GB * task.cpus * task.attempt }
			}

			withLabel: large_node {
				cpus = 64
				memory = { 6.GB * task.cpus * task.attempt }
			}
		}
	}
}

process {

	maxRetries = 2

    withName:varCall_ontR9_trainedModels {
        container = 'pepper_deepvariant_r0.7.sif'
        time = { 3.h * task.attempt }
    }

    withName:varCall_hifi {
        container = 'pepper_deepvariant_r0.8.sif'
        time = { 12.h * task.attempt }
    }

    withName:varPhase {
        container = 'pepper_deepvariant_r0.8.sif'
        time = { 3.h * task.attempt }
    }

    withName:var_CallFilterPhase {
        container = 'pepper_deepvariant_r0.8.sif'
        time = { 16.h * task.attempt }
    }

    withName:filterONT {
        container = 'ratr-redhat-latest.sif'
        time = { 6.h * task.attempt }
    }

    withName:extractIllumina_buildDBG {
        container = 'ratr-redhat-latest.sif'
        time = { 9.h * task.attempt }
    }

    withName:extractPairedIllumina {
        container = 'ratr-redhat-latest.sif'
        time = { 3.h * task.attempt }
    }

    withName:splitPairedIllumina {
        container = 'ratr-redhat-latest.sif'
        time = { 3.h * task.attempt }
    }

    withName:mapPairedIllumina {
        container = 'ratr-redhat-latest.sif'
        time = { 3.h * task.attempt }
    }

    withName:mergePairedIlluminaBAM {
        container = 'ratr-redhat-latest.sif'
        time = { 3.h * task.attempt }
    }

    withName:mixHapAsm {
        container = 'ratr-redhat-latest.sif'
        time = { 36.h * task.attempt }
    }

    withName:mapLRtoAsm {
        container = 'ratr-redhat-latest.sif'
        time = { 10.h * task.attempt }
    }

    withName:mixHapAsm_filter {
        container = 'ratr-redhat-latest.sif'
        time = { 1.h * task.attempt }
    }

    withName:prepLocalCorrection {
        container = 'ratr-redhat-latest.sif'
        time = { 2.h * task.attempt }
    }

    withName:localCorrection {
        container = 'ratr-redhat-latest.sif'
        time = { 2.h * task.attempt }
    }

    withName:mergeLocalCorrection {
        container = 'ratr-redhat-latest.sif'
        time = { 4.h * task.attempt }
    }

    withName:hapResAsm {
        container = 'ratr-redhat-latest.sif'
        time = { 48.h * task.attempt }
    }

    withName:hapResAsm_filter {
        container = 'ratr-redhat-latest.sif'
        time = { 6.h * task.attempt }
    }

    withName:hapResAsm_polish1_1 {
        container = 'ratr-redhat-latest.sif'
        time = { 12.h * task.attempt }
    }

    withName:hapResAsm_polish1_2 {
        container = 'ratr-redhat-latest.sif'
        time = { 12.h * task.attempt }
    }

    withName:hapResAsm_polish2 {
        container = 'ratr-redhat-latest.sif'
        time = { 18.h * task.attempt }
    }

    withName:hapResAsmPolish_phase_mapFilter {
        container = 'ratr-redhat-latest.sif'
        time = { 12.h * task.attempt }
    }

    withName:hapResAsmPolish_phase_varFilter {
        container = 'ratr-redhat-latest.sif'
        time = { 6.h * task.attempt }
    }

    withName:hapResAsmPolish_phase_varPhasedFilter {
        container = 'ratr-redhat-latest.sif'
        time = { 6.h * task.attempt }
    }

    withName:hapResAsmPolish_phase_selectBestPhasedAlignRec {
        container = 'ratr-redhat-latest.sif'
        time = { 1.h * task.attempt }
    }

    withName:hapResAsmPolish_polishAlt {
        container = 'ratr-redhat-latest.sif'
        time = { 9.h * task.attempt }
    }

    withName:hapResAsmPolish_trioBin {
        container = 'ratr-redhat-latest.sif'
        time = { 6.h * task.attempt }
    }

    withName:hapResAsmPolish_extractPhased {
        container = 'ratr-redhat-latest.sif'
        time = { 12.h * task.attempt }
    }

    withName:hapResAsmPolish_getCollapsedHom {
        container = 'ratr-redhat-latest.sif'
        time = { 9.h * task.attempt }
    }

    withName:hapResAsmPolish_dualAsm {
        container = 'ratr-redhat-latest.sif'
        time = { 24.h * task.attempt }
    }

    withName:hapResAsmPolish_polishDualAsm_1 {
        container = 'ratr-redhat-latest.sif'
        time = { 24.h * task.attempt }
    }

    withName:hapResAsmPolish_polishDualAsm_2 {
        container = 'ratr-redhat-latest.sif'
        time = { 1.h * task.attempt }
    }
}

// If your Singularity installation does NOT support the user bind control feature ("auto mount"),
// you can manually provide one or more mounting point to the singularity installation by adding:
// runOptions = '-B <MOUNT_PATH_1> -B <MOUNT_PATH_2>'
// to the singularity scope of this config file

singularity {
	
	enabled = true
	autoMounts = true
	libraryDir = 'containers'
}

includeConfig 'config/python.config'
includeConfig 'config/tools.config'
includeConfig 'config/scripts.config'
includeConfig 'config/pipeline.config'
includeConfig 'config/pmdv.config'
